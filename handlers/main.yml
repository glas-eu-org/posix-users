- name: get list of available groups (/etc/groups)
  shell: 'getent group|cut -d: -f1|grep -E "({{ item.posix_users_groups|join("|")}})" | tr "\n" ","'
  become: False
  changed_when: False
  register: posix_users_available_groups
  check_mode: false
  with_items: "{{ common_users_accounts }}"
  when: common_users_accounts is defined and item.posix_users_groups is defined and ( not posix_users_only_handle_my_user or item.name == ansible_user_id)

- name: add users to available groups (/etc/groups)
  user: name={{ item.item.name }} groups={{ item.stdout }}
  with_items: "{{ posix_users_available_groups.results }}"
  when: item.stdout is defined
  notify: update /etc/passwd timestamp
  register: 
  become: true
  
- name: update /etc/passwd timestamp
  file: path={{ item }} state=touch
  with_items:
   - /etc/passwd
  become: true

- name: register ansible_ssh_user used for this machine
  shell: echo ${USER}
  become: false
  register: common_ansible_ansible_ssh_user
  check_mode: false
  when: ansible_connection == 'smart' or ansible_connection == 'ssh'

- name: debug ansible_ssh_ControlPath
  debug: var=ansible_ssh_ControlPath verbosity=4

- name: debug ansible_connection
  debug: var=ansible_connection

## fixme: we should check if controlpath is setup correct in ../../../../ansible.cfg (we should expect ansible_ssh_ControlPath or in any other directory thats listed in http://docs.ansible.com/ansible/latest/intro_configuration.html
## fixme: this handler should be a library
- name: restart ssh multiplexer
  become: false
  local_action: |
    shell \
        if [ -S {{ ansible_ssh_ControlPath }} ]; then \
        ssh -O exit -o ControlPath={{ ansible_ssh_ControlPath }} {{ hostvars[inventory_hostname]['ansible_ssh_host']|default(inventory_hostname) }}; \
        count=0;\
        while (true); do \
            if [ ${count} -gt 5 ]; then \
                echo "ERROR: Failed to wait for ssh multiplexer to stop: {{ ansible_ssh_ControlPath }} still exists"; \
                exit 32; \
            else \
                if [ -S {{ ansible_ssh_ControlPath }} ]; then \
                    count=$((count+1)); \
                    sleep 1; \
                else \
                    break; \
                fi; \
            fi; \
        done; \
     else \
        echo "ERROR: ansible ssh control path '{{ ansible_ssh_ControlPath }}' does not exist: make sure ansible_ssh_ControlPath in posix-users/defaults/main.yml matches control_path settings in ansible.cfg"; \
     fi;
  #  failed_when: false
  when: not common_ansible_ansible_ssh_user|skipped
  check_mode: false
  register: posix_user_restart_ssh_multiplexer
  failed_when: "'ERROR' in posix_user_restart_ssh_multiplexer.stderr or posix_user_restart_ssh_multiplexer.stdout"
